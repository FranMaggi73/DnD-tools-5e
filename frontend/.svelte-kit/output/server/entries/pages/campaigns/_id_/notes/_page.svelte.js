import { c as create_ssr_component, b as subscribe, o as onDestroy, f as escape } from "../../../../../chunks/ssr.js";
import { p as page } from "../../../../../chunks/stores.js";
import { u as userStore } from "../../../../../chunks/authStore.js";
import "../../../../../chunks/api.js";
import { h as headerTitle } from "../../../../../chunks/uiStore.js";
import { getFirestore } from "firebase/firestore";
import { a as app } from "../../../../../chunks/firebase.js";
const css = {
  code: ".line-clamp-3.svelte-1vnfw7c{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden}.custom-scrollbar.svelte-1vnfw7c::-webkit-scrollbar{width:8px}.custom-scrollbar.svelte-1vnfw7c::-webkit-scrollbar-track{background:rgba(139, 69, 19, 0.1);border-radius:4px}.custom-scrollbar.svelte-1vnfw7c::-webkit-scrollbar-thumb{background:linear-gradient(to bottom, #8B4513, #654321);border-radius:4px}.custom-scrollbar.svelte-1vnfw7c::-webkit-scrollbar-thumb:hover{background:linear-gradient(to bottom, #A0522D, #8B4513)}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nimport { page } from \\"$app/stores\\";\\nimport { userStore } from \\"$lib/stores/authStore\\";\\nimport { api } from \\"$lib/api/api\\";\\nimport { headerTitle } from \\"$lib/stores/uiStore\\";\\nimport { getFirestore, collection, query, where, onSnapshot } from \\"firebase/firestore\\";\\nimport { app } from \\"$lib/firebase\\";\\nheaderTitle.set(\\"\\\\u{1F4DD} Notas\\");\\nimport {\\n  validateNoteTitle,\\n  validateNoteContent,\\n  validateNoteTags,\\n  validateAll\\n} from \\"$lib/utils/validation\\";\\nlet validationErrors = {\\n  title: \\"\\",\\n  content: \\"\\",\\n  tags: \\"\\"\\n};\\nlet touched = {\\n  title: false,\\n  content: false,\\n  tags: false\\n};\\n$: if (touched.title) {\\n  const result = validateNoteTitle(form.title);\\n  validationErrors.title = result.valid ? \\"\\" : result.error || \\"\\";\\n}\\n$: if (touched.content) {\\n  const result = validateNoteContent(form.content);\\n  validationErrors.content = result.valid ? \\"\\" : result.error || \\"\\";\\n}\\n$: if (touched.tags) {\\n  const result = validateNoteTags(form.tags);\\n  validationErrors.tags = result.valid ? \\"\\" : result.error || \\"\\";\\n}\\n$: isFormValid = !validationErrors.title && !validationErrors.content && !validationErrors.tags && form.title.trim();\\nfunction handleBlur(field) {\\n  touched[field] = true;\\n}\\nfunction validateNoteForm() {\\n  Object.keys(touched).forEach((key) => {\\n    touched[key] = true;\\n  });\\n  const titleValidation = validateNoteTitle(form.title);\\n  const contentValidation = validateNoteContent(form.content);\\n  const tagsValidation = validateNoteTags(form.tags);\\n  const validation = validateAll(titleValidation, contentValidation, tagsValidation);\\n  if (!validation.valid) {\\n    validationErrors.title = titleValidation.error || \\"\\";\\n    validationErrors.content = contentValidation.error || \\"\\";\\n    validationErrors.tags = tagsValidation.error || \\"\\";\\n    return false;\\n  }\\n  return true;\\n}\\n$: campaignId = $page.params.id || \\"\\";\\nlet campaign = null;\\nlet notes = [];\\nlet filteredNotes = [];\\nlet loading = true;\\nlet error = \\"\\";\\nlet isAddingTag = false;\\nlet searchQuery = \\"\\";\\nlet filterCategory = \\"all\\";\\nlet filterShared = \\"all\\";\\nlet showCreateModal = false;\\nlet showEditModal = false;\\nlet editingNote = null;\\nlet form = {\\n  title: \\"\\",\\n  content: \\"\\",\\n  isShared: false,\\n  category: \\"other\\",\\n  tags: []\\n};\\nlet tagInput = \\"\\";\\nlet notesUnsubscribe = null;\\nconst db = getFirestore(app);\\n$: isDM = campaign && $userStore && campaign.dmId === $userStore.uid;\\nconst categories = [\\n  { value: \\"session\\", label: \\"\\\\u{1F4C5} Sesi\\\\xF3n\\", icon: \\"\\\\u{1F4C5}\\" },\\n  { value: \\"npc\\", label: \\"\\\\u{1F464} NPC\\", icon: \\"\\\\u{1F464}\\" },\\n  { value: \\"location\\", label: \\"\\\\u{1F5FA}\\\\uFE0F Ubicaci\\\\xF3n\\", icon: \\"\\\\u{1F5FA}\\\\uFE0F\\" },\\n  { value: \\"plot\\", label: \\"\\\\u{1F4D6} Trama\\", icon: \\"\\\\u{1F4D6}\\" },\\n  { value: \\"other\\", label: \\"\\\\u{1F4DD} Otro\\", icon: \\"\\\\u{1F4DD}\\" }\\n];\\n$: {\\n  filteredNotes = notes.filter((note) => {\\n    if (searchQuery) {\\n      const search = searchQuery.toLowerCase();\\n      const matchTitle = note.title.toLowerCase().includes(search);\\n      const matchContent = note.content.toLowerCase().includes(search);\\n      const matchTags = note.tags.some((tag) => tag.toLowerCase().includes(search));\\n      if (!matchTitle && !matchContent && !matchTags) return false;\\n    }\\n    if (filterCategory !== \\"all\\" && note.category !== filterCategory) return false;\\n    if (filterShared === \\"personal\\" && note.isShared) return false;\\n    if (filterShared === \\"shared\\" && !note.isShared) return false;\\n    return true;\\n  });\\n}\\nonMount(async () => {\\n  await loadCampaign();\\n  setupNotesListener();\\n});\\nonDestroy(() => {\\n  if (notesUnsubscribe) notesUnsubscribe();\\n});\\nasync function loadCampaign() {\\n  try {\\n    campaign = await api.getCampaign(campaignId);\\n  } catch (err) {\\n    error = err.message;\\n  }\\n}\\nfunction setupNotesListener() {\\n  if (!$userStore) return;\\n  try {\\n    let combineNotes = function() {\\n      if (loadedPersonal && loadedShared) {\\n        const allNotes = [...personalNotes, ...sharedNotes];\\n        const uniqueNotes = Array.from(\\n          new Map(allNotes.map((note) => [note.id, note])).values()\\n        );\\n        notes = uniqueNotes.sort(\\n          (a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()\\n        );\\n        loading = false;\\n      }\\n    };\\n    loading = true;\\n    let personalNotes = [];\\n    let sharedNotes = [];\\n    let loadedPersonal = false;\\n    let loadedShared = false;\\n    const notesRef = collection(db, \\"notes\\");\\n    const personalQuery = query(\\n      notesRef,\\n      where(\\"campaignId\\", \\"==\\", campaignId),\\n      where(\\"authorId\\", \\"==\\", $userStore.uid),\\n      where(\\"isShared\\", \\"==\\", false)\\n    );\\n    const sharedQuery = query(\\n      notesRef,\\n      where(\\"campaignId\\", \\"==\\", campaignId),\\n      where(\\"isShared\\", \\"==\\", true)\\n    );\\n    const unsubPersonal = onSnapshot(\\n      personalQuery,\\n      (snapshot) => {\\n        personalNotes = snapshot.docs.map((doc) => {\\n          const data = doc.data();\\n          return {\\n            id: doc.id,\\n            ...data,\\n            createdAt: data.createdAt?.toDate?.()?.toISOString() || (/* @__PURE__ */ new Date()).toISOString(),\\n            updatedAt: data.updatedAt?.toDate?.()?.toISOString() || (/* @__PURE__ */ new Date()).toISOString()\\n          };\\n        });\\n        loadedPersonal = true;\\n        combineNotes();\\n      },\\n      (err) => {\\n        console.error(\\"Error en listener de notas personales:\\", err);\\n        error = err.message;\\n        loading = false;\\n      }\\n    );\\n    const unsubShared = onSnapshot(\\n      sharedQuery,\\n      (snapshot) => {\\n        sharedNotes = snapshot.docs.map((doc) => {\\n          const data = doc.data();\\n          return {\\n            id: doc.id,\\n            ...data,\\n            createdAt: data.createdAt?.toDate?.()?.toISOString() || (/* @__PURE__ */ new Date()).toISOString(),\\n            updatedAt: data.updatedAt?.toDate?.()?.toISOString() || (/* @__PURE__ */ new Date()).toISOString()\\n          };\\n        });\\n        loadedShared = true;\\n        combineNotes();\\n      },\\n      (err) => {\\n        console.error(\\"Error en listener de notas compartidas:\\", err);\\n        error = err.message;\\n        loading = false;\\n      }\\n    );\\n    notesUnsubscribe = () => {\\n      unsubPersonal();\\n      unsubShared();\\n    };\\n  } catch (err) {\\n    error = err.message;\\n    loading = false;\\n  }\\n}\\nfunction openCreateModal() {\\n  resetForm();\\n  showCreateModal = true;\\n}\\nfunction openEditModal(note) {\\n  editingNote = note;\\n  form = {\\n    title: note.title,\\n    content: note.content,\\n    isShared: note.isShared,\\n    category: note.category,\\n    tags: [...note.tags]\\n  };\\n  showEditModal = true;\\n}\\nfunction resetForm() {\\n  form = {\\n    title: \\"\\",\\n    content: \\"\\",\\n    isShared: false,\\n    category: \\"other\\",\\n    tags: []\\n  };\\n  tagInput = \\"\\";\\n  Object.keys(touched).forEach((key) => {\\n    touched[key] = false;\\n  });\\n  Object.keys(validationErrors).forEach((key) => {\\n    validationErrors[key] = \\"\\";\\n  });\\n}\\nfunction addTag() {\\n  if (isAddingTag) {\\n    console.log(\\"Tag addition already in progress\\");\\n    return;\\n  }\\n  const trimmedTag = tagInput.trim().toLowerCase();\\n  if (!trimmedTag) {\\n    return;\\n  }\\n  if (form.tags.includes(trimmedTag)) {\\n    validationErrors.tags = \`La etiqueta \\"\${trimmedTag}\\" ya existe\`;\\n    touched.tags = true;\\n    tagInput = \\"\\";\\n    return;\\n  }\\n  isAddingTag = true;\\n  try {\\n    const newTags = [...form.tags, trimmedTag];\\n    const validation = validateNoteTags(newTags);\\n    if (!validation.valid) {\\n      validationErrors.tags = validation.error || \\"\\";\\n      touched.tags = true;\\n      return;\\n    }\\n    form.tags = newTags;\\n    validationErrors.tags = \\"\\";\\n    tagInput = \\"\\";\\n  } finally {\\n    setTimeout(() => {\\n      isAddingTag = false;\\n    }, 100);\\n  }\\n}\\nfunction removeTag(tag) {\\n  form.tags = form.tags.filter((t) => t !== tag);\\n}\\nasync function handleCreate() {\\n  if (!validateNoteForm()) return;\\n  try {\\n    await api.createNote(campaignId, form);\\n    showCreateModal = false;\\n    resetForm();\\n  } catch (err) {\\n    error = err.message;\\n  }\\n}\\nasync function handleUpdate() {\\n  if (!editingNote || !validateNoteForm()) return;\\n  try {\\n    await api.updateNote(editingNote.id, form);\\n    showEditModal = false;\\n    editingNote = null;\\n    resetForm();\\n  } catch (err) {\\n    error = err.message;\\n  }\\n}\\nasync function handleDelete(note) {\\n  if (!confirm(\`\\\\xBFEliminar la nota \\"\${note.title}\\"?\`)) return;\\n  try {\\n    await api.deleteNote(note.id);\\n  } catch (err) {\\n    error = err.message;\\n  }\\n}\\nfunction getCategoryIcon(category) {\\n  return categories.find((c) => c.value === category)?.icon || \\"\\\\u{1F4DD}\\";\\n}\\nfunction formatDate(dateStr) {\\n  try {\\n    const date = new Date(dateStr);\\n    if (isNaN(date.getTime())) {\\n      return \\"Fecha no disponible\\";\\n    }\\n    return date.toLocaleDateString(\\"es\\", {\\n      day: \\"2-digit\\",\\n      month: \\"short\\",\\n      year: \\"numeric\\",\\n      hour: \\"2-digit\\",\\n      minute: \\"2-digit\\"\\n    });\\n  } catch (err) {\\n    console.error(\\"Error formateando fecha:\\", err);\\n    return \\"Fecha no disponible\\";\\n  }\\n}\\n<\/script>\\r\\n\\r\\n<div class=\\"min-h-screen p-4 md:p-6\\">\\r\\n  <div class=\\"container mx-auto max-w-7xl\\">\\r\\n    \\r\\n    <!-- Header -->\\r\\n    <div class=\\"mb-6\\">\\r\\n      <div class=\\"relative\\">\\r\\n        <button \\r\\n          on:click={openCreateModal}\\r\\n          class=\\"btn btn-dnd hidden sm:block absolute right-0 top-0\\"\\r\\n        >\\r\\n          <span class=\\"text-xl\\">➕</span>\\r\\n          Nueva Nota\\r\\n        </button>\\r\\n        \\r\\n        <div class=\\"text-center\\">\\r\\n          <h1 class=\\"text-3xl md:text-4xl font-bold text-secondary title-ornament\\">\\r\\n            📝 Notas\\r\\n          </h1>\\r\\n          <p class=\\"text-base-content/70 font-body italic mt-2\\">\\r\\n            {isDM ? 'Gestiona tus notas personales y compartidas' : 'Tus notas personales de aventurero'}\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\"flex justify-center mt-4 sm:hidden\\">\\r\\n        <button \\r\\n          on:click={openCreateModal}\\r\\n          class=\\"btn btn-dnd\\"\\r\\n        >\\r\\n          <span class=\\"text-xl\\">➕</span>\\r\\n          Nueva Nota\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    {#if error}\\r\\n      <div class=\\"alert alert-error mb-6\\">\\r\\n        <span>{error}</span>\\r\\n        <button class=\\"btn btn-sm\\" on:click={() => error = ''}>✕</button>\\r\\n      </div>\\r\\n    {/if}\\r\\n\\r\\n    {#if loading}\\r\\n      <div class=\\"flex justify-center py-20\\">\\r\\n        <span class=\\"loading loading-spinner loading-lg text-secondary\\"></span>\\r\\n      </div>\\r\\n    {:else}\\r\\n      \\r\\n      <!-- Filtros -->\\r\\n      <div class=\\"card-parchment p-4 mb-6\\">\\r\\n        <div class=\\"grid grid-cols-1 md:grid-cols-3 gap-4\\">\\r\\n          \\r\\n          <div class=\\"form-control\\">\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text font-medieval text-neutral\\">🔍 Buscar</span>\\r\\n            </label>\\r\\n            <input \\r\\n              type=\\"text\\" \\r\\n              bind:value={searchQuery}\\r\\n              placeholder=\\"Título, contenido o etiquetas...\\"\\r\\n              class=\\"input input-bordered bg-[#2d241c] text-base-content border-primary/50\\"\\r\\n            />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\"form-control\\">\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text font-medieval text-neutral\\">Categoría</span>\\r\\n            </label>\\r\\n            <select \\r\\n              bind:value={filterCategory}\\r\\n              class=\\"select select-bordered bg-[#2d241c] text-base-content border-primary/50\\"\\r\\n            >\\r\\n              <option value=\\"all\\">Todas</option>\\r\\n              {#each categories as cat}\\r\\n                <option value={cat.value}>{cat.label}</option>\\r\\n              {/each}\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\"form-control\\">\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text font-medieval text-neutral\\">Tipo</span>\\r\\n            </label>\\r\\n            <select \\r\\n              bind:value={filterShared}\\r\\n              class=\\"select select-bordered bg-[#2d241c] text-base-content border-primary/50\\"\\r\\n            >\\r\\n              <option value=\\"all\\">Todas</option>\\r\\n              <option value=\\"personal\\">Personales</option>\\r\\n              <option value=\\"shared\\">Compartidas</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"mt-3 text-sm text-neutral/60 font-body text-center\\">\\r\\n          Mostrando {filteredNotes.length} de {notes.length} notas\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Grid de Notas -->\\r\\n      {#if filteredNotes.length === 0}\\r\\n        <div class=\\"card-parchment p-12 text-center\\">\\r\\n          <div class=\\"text-6xl mb-4\\">📝</div>\\r\\n          <h3 class=\\"text-2xl font-medieval text-neutral mb-2\\">\\r\\n            {notes.length === 0 ? 'Sin notas aún' : 'No se encontraron notas'}\\r\\n          </h3>\\r\\n          <p class=\\"text-neutral/70 font-body\\">\\r\\n            {notes.length === 0 \\r\\n              ? 'Crea tu primera nota para comenzar' \\r\\n              : 'Intenta ajustar los filtros de búsqueda'}\\r\\n          </p>\\r\\n        </div>\\r\\n      {:else}\\r\\n        <div class=\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\">\\r\\n          {#each filteredNotes as note}\\r\\n            <div class=\\"card-parchment corner-ornament hover:shadow-xl transition-all\\">\\r\\n              <div class=\\"card-body p-4\\">\\r\\n                \\r\\n                <div class=\\"flex items-start justify-between mb-2\\">\\r\\n                  <div class=\\"flex items-center gap-2 flex-1 min-w-0\\">\\r\\n                    <span class=\\"text-2xl\\">{getCategoryIcon(note.category)}</span>\\r\\n                    <h3 class=\\"font-medieval text-lg text-neutral font-bold truncate\\">\\r\\n                      {note.title}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                  \\r\\n                  <div class=\\"dropdown dropdown-end flex-shrink-0\\">\\r\\n                    <label tabindex=\\"0\\" class=\\"btn btn-ghost btn-xs btn-circle\\">\\r\\n                      <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-4 w-4\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke=\\"currentColor\\">\\r\\n                        <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\\" />\\r\\n                      </svg>\\r\\n                    </label>\\r\\n                    <ul tabindex=\\"0\\" class=\\"dropdown-content z-[1] menu p-2 shadow bg-neutral rounded-box w-40 border-2 border-secondary\\">\\r\\n                      <li><a on:click={() => openEditModal(note)} class=\\"text-secondary\\">✏️ Editar</a></li>\\r\\n                      <li><a on:click={() => handleDelete(note)} class=\\"text-error\\">🗑️ Eliminar</a></li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\"flex flex-wrap gap-1 mb-3\\">\\r\\n                  {#if note.isShared}\\r\\n                    <div class=\\"badge badge-success badge-sm\\">🌐 Compartida</div>\\r\\n                  {:else}\\r\\n                    <div class=\\"badge badge-info badge-sm\\">🔒 Personal</div>\\r\\n                  {/if}\\r\\n                  \\r\\n                  {#if note.authorId !== $userStore?.uid}\\r\\n                    <div class=\\"badge badge-warning badge-sm\\">👑 DM</div>\\r\\n                  {/if}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\"text-sm text-neutral/80 font-body mb-3 line-clamp-3\\">\\r\\n                  {note.content || 'Sin contenido'}\\r\\n                </div>\\r\\n\\r\\n                {#if note.tags && note.tags.length > 0}\\r\\n                  <div class=\\"flex flex-wrap gap-1 mb-3\\">\\r\\n                    {#each note.tags.slice(0, 3) as tag}\\r\\n                      <div class=\\"badge badge-outline badge-xs\\">{tag}</div>\\r\\n                    {/each}\\r\\n                    {#if note.tags.length > 3}\\r\\n                      <div class=\\"badge badge-outline badge-xs\\">+{note.tags.length - 3}</div>\\r\\n                    {/if}\\r\\n                  </div>\\r\\n                {/if}\\r\\n\\r\\n                <div class=\\"text-xs text-neutral/60 font-body\\">\\r\\n                  <div>✍️ {note.authorName}</div>\\r\\n                  <div>🕐 {formatDate(note.updatedAt)}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          {/each}\\r\\n        </div>\\r\\n      {/if}\\r\\n    {/if}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal Crear Nota -->\\r\\n{#if showCreateModal}\\r\\n  <div \\r\\n    class=\\"modal modal-open z-50\\" \\r\\n    role=\\"dialog\\"\\r\\n    aria-modal=\\"true\\"\\r\\n    aria-labelledby=\\"create-note-title\\"\\r\\n    on:click={() => { showCreateModal = false; resetForm(); }}\\r\\n    on:keydown={(e) => e.key === 'Escape' && (showCreateModal = false, resetForm())}\\r\\n  >\\r\\n    <div \\r\\n      class=\\"card-parchment border-2 sm:border-4 border-secondary \\r\\n             w-[95vw] sm:w-[90vw] md:w-3/4 lg:w-2/3 xl:w-1/2 max-w-3xl \\r\\n             relative max-h-[92vh] flex flex-col m-2 sm:m-4\\"\\r\\n      on:click|stopPropagation\\r\\n    >\\r\\n      \\r\\n      <div class=\\"p-3 sm:p-4 md:p-5 border-b-2 border-secondary flex-shrink-0 bg-gradient-to-b from-[#f4e4c1] to-transparent\\">\\r\\n        <button \\r\\n          class=\\"btn btn-xs sm:btn-sm btn-circle btn-ghost absolute right-2 top-2 hover:bg-error/20\\" \\r\\n          on:click={() => { showCreateModal = false; resetForm(); }}\\r\\n          aria-label=\\"Cerrar modal\\"\\r\\n        >✕</button>\\r\\n        \\r\\n        <h3 \\r\\n          id=\\"create-note-title\\"\\r\\n          class=\\"font-bold text-xl sm:text-2xl md:text-3xl font-medieval text-neutral text-center pr-8\\"\\r\\n        >\\r\\n          ✨ Nueva Nota\\r\\n        </h3>\\r\\n      </div>\\r\\n      <div class=\\"flex-1 overflow-y-auto p-3 sm:p-4 md:p-5 space-y-3 sm:space-y-4 custom-scrollbar\\">\\r\\n        \\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base md:text-lg\\">\\r\\n              Título <span class=\\"text-error\\">*</span>\\r\\n            </span>\\r\\n          </label>\\r\\n          <input \\r\\n            type=\\"text\\" \\r\\n            bind:value={form.title}\\r\\n            on:blur={() => handleBlur('title')}\\r\\n            placeholder=\\"Ej: Encuentro con el dragón rojo\\"\\r\\n            class=\\"input input-sm sm:input-md input-bordered bg-[#2d241c] text-base-content border-primary/50 \\r\\n                   focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\r\\n                   {validationErrors.title ? 'border-error' : ''}\\"\\r\\n            required\\r\\n            autofocus\\r\\n          />\\r\\n          {#if validationErrors.title}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.title}</span>\\r\\n            </label>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"grid grid-cols-1 md:grid-cols-2 gap-3 sm:gap-4\\">\\r\\n          <div class=\\"form-control\\">\\r\\n            <label class=\\"label pb-1\\">\\r\\n              <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">Categoría</span>\\r\\n            </label>\\r\\n            <select \\r\\n              bind:value={form.category}\\r\\n              class=\\"select select-sm sm:select-md select-bordered bg-[#2d241c] text-base-content border-primary/50\\r\\n                     focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\"\\r\\n            >\\r\\n              {#each categories as cat}\\r\\n                <option value={cat.value}>{cat.label}</option>\\r\\n              {/each}\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          {#if isDM}\\r\\n            <div class=\\"form-control justify-center\\">\\r\\n              <label class=\\"label cursor-pointer justify-start gap-2 sm:gap-3 pb-1\\">\\r\\n                <input \\r\\n                  type=\\"checkbox\\" \\r\\n                  bind:checked={form.isShared}\\r\\n                  class=\\"checkbox checkbox-secondary checkbox-sm sm:checkbox-md\\"\\r\\n                />\\r\\n                <div class=\\"flex flex-col\\">\\r\\n                  <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">\\r\\n                    🌐 Compartir con jugadores\\r\\n                  </span>\\r\\n                  <span class=\\"label-text-alt text-neutral/60 italic text-xs\\">\\r\\n                    Los jugadores podrán ver esta nota\\r\\n                  </span>\\r\\n                </div>\\r\\n              </label>\\r\\n            </div>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base md:text-lg\\">Contenido</span>\\r\\n          </label>\\r\\n          <textarea \\r\\n            bind:value={form.content}\\r\\n            on:blur={() => handleBlur('content')}\\r\\n            placeholder=\\"Escribe aquí el contenido de tu nota...\\"\\r\\n            class=\\"textarea textarea-sm sm:textarea-md textarea-bordered bg-[#2d241c] text-base-content border-primary/50 \\r\\n                   h-32 sm:h-40 md:h-48 resize-none\\r\\n                   focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\r\\n                   {validationErrors.content ? 'border-error' : ''}\\"\\r\\n          ></textarea>\\r\\n          {#if validationErrors.content}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.content}</span>\\r\\n            </label>\\r\\n          {:else}\\r\\n            <label class=\\"label pt-1\\">\\r\\n              <span class=\\"label-text-alt text-neutral/60 italic text-xs\\">\\r\\n                Puedes usar este espacio para escribir detalles extensos\\r\\n              </span>\\r\\n            </label>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">🏷️ Etiquetas</span>\\r\\n          </label>\\r\\n          <div class=\\"flex gap-2\\">\\r\\n            <input \\r\\n              type=\\"text\\" \\r\\n              bind:value={tagInput}\\r\\n              on:keydown={(e) => e.key === 'Enter' && (e.preventDefault(), addTag())}\\r\\n              placeholder=\\"Presiona Enter para agregar...\\"\\r\\n              class=\\"input input-sm sm:input-md input-bordered bg-[#2d241c] text-base-content border-primary/50 flex-1\\r\\n                     focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\"\\r\\n            />\\r\\n            <button \\r\\n              type=\\"button\\"\\r\\n              on:click={addTag}\\r\\n              class=\\"btn btn-sm sm:btn-md btn-secondary flex-shrink-0\\"\\r\\n              disabled={!tagInput.trim()}\\r\\n            >\\r\\n              ➕\\r\\n            </button>\\r\\n          </div>\\r\\n          \\r\\n          {#if validationErrors.tags}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.tags}</span>\\r\\n            </label>\\r\\n          {/if}\\r\\n          \\r\\n          {#if form.tags.length > 0}\\r\\n            <div class=\\"flex flex-wrap gap-1.5 sm:gap-2 mt-2 p-2 bg-neutral/10 rounded-lg border border-primary/20\\">\\r\\n              {#each form.tags as tag}\\r\\n                <div class=\\"badge badge-md sm:badge-lg gap-1.5 sm:gap-2 bg-secondary/20 border-secondary/40\\">\\r\\n                  <span class=\\"text-xs sm:text-sm\\">{tag}</span>\\r\\n                  <button \\r\\n                    type=\\"button\\"\\r\\n                    on:click={() => removeTag(tag)}\\r\\n                    class=\\"btn btn-xs btn-circle btn-ghost hover:bg-error hover:text-white\\"\\r\\n                  >✕</button>\\r\\n                </div>\\r\\n              {/each}\\r\\n            </div>\\r\\n          {:else if !validationErrors.tags}\\r\\n            <label class=\\"label pt-1\\">\\r\\n              <span class=\\"label-text-alt text-neutral/60 italic text-xs\\">\\r\\n                Agrega etiquetas para organizar mejor tus notas\\r\\n              </span>\\r\\n            </label>\\r\\n          {/if}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\"flex flex-col-reverse sm:flex-row justify-center gap-2 sm:gap-4 p-3 sm:p-4 md:p-5 \\r\\n                  border-t-2 border-secondary flex-shrink-0 bg-gradient-to-t from-[#f4e4c1] to-transparent\\">\\r\\n        <button \\r\\n          on:click={() => { showCreateModal = false; resetForm(); }}\\r\\n          class=\\"btn btn-sm sm:btn-md btn-outline border-2 border-neutral text-neutral \\r\\n                 hover:bg-neutral hover:text-secondary font-medieval w-full sm:w-auto\\"\\r\\n        >\\r\\n          Cancelar\\r\\n        </button>\\r\\n        <button \\r\\n          on:click={handleCreate}\\r\\n          class=\\"btn btn-sm sm:btn-md btn-dnd w-full sm:w-auto\\"\\r\\n          disabled={!isFormValid}\\r\\n        >\\r\\n          <span class=\\"text-lg sm:text-xl\\">💾</span>\\r\\n          Crear Nota\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n{/if}\\r\\n\\r\\n<!-- Modal Editar Nota -->\\r\\n{#if showEditModal && editingNote}\\r\\n  <div class=\\"modal modal-open z-50\\" on:click={() => { showEditModal = false; editingNote = null; resetForm(); }}>\\r\\n    <div \\r\\n      class=\\"card-parchment border-2 sm:border-4 border-secondary \\r\\n             w-[95vw] sm:w-[90vw] md:w-3/4 lg:w-2/3 xl:w-1/2 max-w-3xl \\r\\n             relative max-h-[92vh] flex flex-col m-2 sm:m-4\\"\\r\\n      on:click|stopPropagation\\r\\n    >\\r\\n      \\r\\n      <div class=\\"p-3 sm:p-4 md:p-5 border-b-2 border-secondary flex-shrink-0 bg-gradient-to-b from-[#f4e4c1] to-transparent\\">\\r\\n        <button \\r\\n          class=\\"btn btn-xs sm:btn-sm btn-circle btn-ghost absolute right-2 top-2 hover:bg-error/20\\" \\r\\n          on:click={() => { showEditModal = false; editingNote = null; resetForm(); }}\\r\\n        >✕</button>\\r\\n        \\r\\n        <h3 class=\\"font-bold text-xl sm:text-2xl md:text-3xl font-medieval text-neutral text-center pr-8\\">\\r\\n          ✏️ Editar Nota\\r\\n        </h3>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\"flex-1 overflow-y-auto p-3 sm:p-4 md:p-5 space-y-3 sm:space-y-4 custom-scrollbar\\">\\r\\n        \\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base md:text-lg\\">\\r\\n              Título <span class=\\"text-error\\">*</span>\\r\\n            </span>\\r\\n          </label>\\r\\n          <input \\r\\n            type=\\"text\\" \\r\\n            bind:value={form.title}\\r\\n            on:blur={() => handleBlur('title')}\\r\\n            placeholder=\\"Ej: Encuentro con el dragón rojo\\"\\r\\n            class=\\"input input-sm sm:input-md input-bordered bg-[#2d241c] text-base-content border-primary/50 \\r\\n                   focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\r\\n                   {validationErrors.title ? 'border-error' : ''}\\"\\r\\n            required\\r\\n          />\\r\\n          {#if validationErrors.title}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.title}</span>\\r\\n            </label>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"grid grid-cols-1 md:grid-cols-2 gap-3 sm:gap-4\\">\\r\\n          <div class=\\"form-control\\">\\r\\n            <label class=\\"label pb-1\\">\\r\\n              <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">Categoría</span>\\r\\n            </label>\\r\\n            <select \\r\\n              bind:value={form.category}\\r\\n              class=\\"select select-sm sm:select-md select-bordered bg-[#2d241c] text-base-content border-primary/50\\r\\n                     focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\"\\r\\n            >\\r\\n              {#each categories as cat}\\r\\n                <option value={cat.value}>{cat.label}</option>\\r\\n              {/each}\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          {#if isDM}\\r\\n            <div class=\\"form-control justify-center\\">\\r\\n              <label class=\\"label cursor-pointer justify-start gap-2 sm:gap-3 pb-1\\">\\r\\n                <input \\r\\n                  type=\\"checkbox\\" \\r\\n                  bind:checked={form.isShared}\\r\\n                  class=\\"checkbox checkbox-secondary checkbox-sm sm:checkbox-md\\"\\r\\n                />\\r\\n                <div class=\\"flex flex-col\\">\\r\\n                  <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">\\r\\n                    🌐 Compartir con jugadores\\r\\n                  </span>\\r\\n                  <span class=\\"label-text-alt text-neutral/60 italic text-xs\\">\\r\\n                    Los jugadores podrán ver esta nota\\r\\n                  </span>\\r\\n                </div>\\r\\n              </label>\\r\\n            </div>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base md:text-lg\\">Contenido</span>\\r\\n          </label>\\r\\n          <textarea \\r\\n            bind:value={form.content}\\r\\n            on:blur={() => handleBlur('content')}\\r\\n            placeholder=\\"Escribe aquí el contenido de tu nota...\\"\\r\\n            class=\\"textarea textarea-sm sm:textarea-md textarea-bordered bg-[#2d241c] text-base-content border-primary/50 \\r\\n                   h-32 sm:h-40 md:h-48 resize-none\\r\\n                   focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\r\\n                   {validationErrors.content ? 'border-error' : ''}\\"\\r\\n          ></textarea>\\r\\n          {#if validationErrors.content}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.content}</span>\\r\\n            </label>\\r\\n          {/if}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"form-control\\">\\r\\n          <label class=\\"label pb-1\\">\\r\\n            <span class=\\"label-text font-medieval text-neutral text-sm sm:text-base\\">🏷️ Etiquetas</span>\\r\\n          </label>\\r\\n          <div class=\\"flex gap-2\\">\\r\\n            <input \\r\\n              type=\\"text\\" \\r\\n              bind:value={tagInput}\\r\\n              on:keydown={(e) => e.key === 'Enter' && (e.preventDefault(), addTag())}\\r\\n              placeholder=\\"Presiona Enter para agregar...\\"\\r\\n              class=\\"input input-sm sm:input-md input-bordered bg-[#2d241c] text-base-content border-primary/50 flex-1\\r\\n                     focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary/50\\"\\r\\n            />\\r\\n            <button \\r\\n              type=\\"button\\"\\r\\n              on:click={addTag}\\r\\n              class=\\"btn btn-sm sm:btn-md btn-secondary flex-shrink-0\\"\\r\\n              disabled={!tagInput.trim()}\\r\\n            >\\r\\n              ➕\\r\\n            </button>\\r\\n          </div>\\r\\n          \\r\\n          {#if validationErrors.tags}\\r\\n            <label class=\\"label\\">\\r\\n              <span class=\\"label-text-alt text-error\\">{validationErrors.tags}</span>\\r\\n            </label>\\r\\n          {/if}\\r\\n          \\r\\n          {#if form.tags.length > 0}\\r\\n            <div class=\\"flex flex-wrap gap-1.5 sm:gap-2 mt-2 p-2 bg-neutral/10 rounded-lg border border-primary/20\\">\\r\\n              {#each form.tags as tag}\\r\\n                <div class=\\"badge badge-md sm:badge-lg gap-1.5 sm:gap-2 bg-secondary/20 border-secondary/40\\">\\r\\n                  <span class=\\"text-xs sm:text-sm\\">{tag}</span>\\r\\n                  <button \\r\\n                    type=\\"button\\"\\r\\n                    on:click={() => removeTag(tag)}\\r\\n                    class=\\"btn btn-xs btn-circle btn-ghost hover:bg-error hover:text-white\\"\\r\\n                  >✕</button>\\r\\n                </div>\\r\\n              {/each}\\r\\n            </div>\\r\\n          {/if}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\"flex flex-col-reverse sm:flex-row justify-center gap-2 sm:gap-4 p-3 sm:p-4 md:p-5 \\r\\n                  border-t-2 border-secondary flex-shrink-0 bg-gradient-to-t from-[#f4e4c1] to-transparent\\">\\r\\n        <button \\r\\n          on:click={() => { showEditModal = false; editingNote = null; resetForm(); }}\\r\\n          class=\\"btn btn-sm sm:btn-md btn-outline border-2 border-neutral text-neutral \\r\\n                 hover:bg-neutral hover:text-secondary font-medieval w-full sm:w-auto\\"\\r\\n        >\\r\\n          Cancelar\\r\\n        </button>\\r\\n        <button \\r\\n          on:click={handleUpdate}\\r\\n          class=\\"btn btn-sm sm:btn-md btn-dnd w-full sm:w-auto\\"\\r\\n          disabled={!isFormValid}\\r\\n        >\\r\\n          <span class=\\"text-lg sm:text-xl\\">💾</span>\\r\\n          Guardar Cambios\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n{/if}\\r\\n\\r\\n<style>\\r\\n  .line-clamp-3 {\\r\\n    display: -webkit-box;\\r\\n    -webkit-line-clamp: 3;\\r\\n    -webkit-box-orient: vertical;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n\\r\\n  /* Scroll personalizado para los modales */\\r\\n  .custom-scrollbar::-webkit-scrollbar {\\r\\n    width: 8px;\\r\\n  }\\r\\n\\r\\n  .custom-scrollbar::-webkit-scrollbar-track {\\r\\n    background: rgba(139, 69, 19, 0.1);\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n\\r\\n  .custom-scrollbar::-webkit-scrollbar-thumb {\\r\\n    background: linear-gradient(to bottom, #8B4513, #654321);\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n\\r\\n  .custom-scrollbar::-webkit-scrollbar-thumb:hover {\\r\\n    background: linear-gradient(to bottom, #A0522D, #8B4513);\\r\\n  }\\r\\n</style>"],"names":[],"mappings":"AA+1BE,4BAAc,CACZ,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,CAAC,CACrB,kBAAkB,CAAE,QAAQ,CAC5B,QAAQ,CAAE,MACZ,CAGA,gCAAiB,mBAAoB,CACnC,KAAK,CAAE,GACT,CAEA,gCAAiB,yBAA0B,CACzC,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAClC,aAAa,CAAE,GACjB,CAEA,gCAAiB,yBAA0B,CACzC,UAAU,CAAE,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CACxD,aAAa,CAAE,GACjB,CAEA,gCAAiB,yBAAyB,MAAO,CAC/C,UAAU,CAAE,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CACzD"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let isDM;
  let $$unsubscribe_userStore;
  let $page, $$unsubscribe_page;
  $$unsubscribe_userStore = subscribe(userStore, (value) => value);
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  headerTitle.set("📝 Notas");
  let campaign = null;
  getFirestore(app);
  onDestroy(() => {
  });
  $$result.css.add(css);
  $page.params.id || "";
  isDM = campaign;
  $$unsubscribe_userStore();
  $$unsubscribe_page();
  return `<div class="min-h-screen p-4 md:p-6"><div class="container mx-auto max-w-7xl"> <div class="mb-6"><div class="relative"><button class="btn btn-dnd hidden sm:block absolute right-0 top-0" data-svelte-h="svelte-wgcxni"><span class="text-xl">➕</span>
          Nueva Nota</button> <div class="text-center"><h1 class="text-3xl md:text-4xl font-bold text-secondary title-ornament" data-svelte-h="svelte-hd92os">📝 Notas</h1> <p class="text-base-content/70 font-body italic mt-2">${escape(isDM ? "Gestiona tus notas personales y compartidas" : "Tus notas personales de aventurero")}</p></div></div> <div class="flex justify-center mt-4 sm:hidden"><button class="btn btn-dnd" data-svelte-h="svelte-ozaowx"><span class="text-xl">➕</span>
          Nueva Nota</button></div></div> ${``} ${`<div class="flex justify-center py-20" data-svelte-h="svelte-cr7jii"><span class="loading loading-spinner loading-lg text-secondary"></span></div>`}</div></div>  ${``}  ${``}`;
});
export {
  Page as default
};
