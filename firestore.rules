rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isCampaignDM(campaignId) {
      return get(/databases/$(database)/documents/events/$(campaignId)).data.dmId == request.auth.uid;
    }
    
    function isCampaignMember(campaignId) {
      return exists(/databases/$(database)/documents/event_members/$(request.auth.uid + '_' + campaignId));
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false;
    }
    
    // Events/Campaigns collection
    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.dmId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.dmId == request.auth.uid;
    }
    
    // Event members collection
    match /event_members/{memberId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Invitations collection
    match /invitations/{invitationId} {
      allow read: if isAuthenticated() && 
        (resource.data.toUserId == request.auth.uid || 
         resource.data.fromUserId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.toUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        (resource.data.toUserId == request.auth.uid || 
         resource.data.fromUserId == request.auth.uid);
    }
    
    // ===========================
    // PERSONAJES - Permisos para listeners en tiempo real
    // ===========================
    match /characters/{characterId} {
      // Permitir lectura a todos los miembros de la campaña
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      // Actualización permitida para el dueño o el DM
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         isCampaignDM(resource.data.campaignId));
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         isCampaignDM(resource.data.campaignId));
    }
    
    // ===========================
    // ENCUENTROS - Permisos para listeners
    // ===========================
    match /encounters/{encounterId} {
      // Lectura permitida para todos los autenticados (para listeners)
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        isCampaignDM(resource.data.campaignId);
      allow delete: if isAuthenticated() && 
        isCampaignDM(resource.data.campaignId);
    }
    
    // ===========================
    // COMBATIENTES - Permisos para listeners
    // ===========================
    match /combatants/{combatantId} {
      // Lectura permitida para todos los autenticados (para listeners)
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
  }
}